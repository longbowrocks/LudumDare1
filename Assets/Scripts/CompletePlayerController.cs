using UnityEngine;using System.Collections;public class CompletePlayerController : MonoBehaviour{    public float power;             //Floating point variable to store the player's movement power.    public float maxSpeed; //Cap for power    public float currentScore;    private Rigidbody2D rb2d;    // Use this for initialization    void Start()    {        rb2d = GetComponent<Rigidbody2D>();        currentScore = 0;    }    //FixedUpdate is called at a fixed interval and is independent of frame rate. Put physics code here.    void Update()    {        if (GameController.instance.currentState == GameController.GameStates.Auction)        {            MenuToggle.Instance.UpdateCurrentBid();        }        if (this == GameController.instance.player1.GetComponent<CompletePlayerController>())            HandleControls();        else            HandleAIControls();    }    void HandleControls()    {        if (GameController.instance.currentState == GameController.GameStates.FreePlay)        {            float moveHorizontal = Input.GetAxis("Horizontal");            float moveVertical = Input.GetAxis("Vertical");            if (moveHorizontal == 0 && moveVertical == 0)            {                rb2d.velocity = rb2d.velocity * 0.8f;            } else            {                Vector2 movement = new Vector2(moveHorizontal, moveVertical);                rb2d.AddForce(movement * power);                rb2d.velocity = rb2d.velocity * Mathf.Min(maxSpeed / rb2d.velocity.magnitude, 1);            }        } else if (GameController.instance.currentState == GameController.GameStates.Auction)        {            bool lowerBid = Input.GetKey(KeyCode.Q);            bool raiseBid = Input.GetKey(KeyCode.E);            if (lowerBid)                GetComponentInChildren<BiddingBar>().currentBid -= 1;            if (raiseBid)                GetComponentInChildren<BiddingBar>().currentBid += 1;        }    }    void HandleAIControls()    {        if (GameController.instance.currentState == GameController.GameStates.FreePlay)        {            // Do nothing. Use builtin pathfinding and let it control Player2.        }        else if (GameController.instance.currentState == GameController.GameStates.Auction)        {            var biddingBar = GetComponentInChildren<BiddingBar>();            var enemyBiddingBar = GameController.instance.player1.GetComponentInChildren<BiddingBar>();            bool lowerBid = biddingBar.currentBid > enemyBiddingBar.currentBid;            bool raiseBid = enemyBiddingBar.currentBid - biddingBar.currentBid > 10;            if (lowerBid)                biddingBar.currentBid -= 1;            if (raiseBid)                biddingBar.currentBid += 1;        }    }}